name: Deprecate NPM Package
description: Deprecate a specific version for all lerna packages

inputs:
    version:
        description: 'Version to deprecate'
        required: true
    message:
        description: 'Deprecation message'
        required: true
    token:
        description: 'NPM token'
        required: true
    deprecate-range:
        description: 'Whether to deprecate all versions up to and including the specified version'
        required: false
        default: 'false'

runs:
    using: "composite"
    steps:
        -   name: Validate version format
            shell: bash
            run: |
                if ! [[ "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?$ ]]; then
                  echo "🔴 Invalid version format: ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
                  exit 1
                fi

                if [[ "${{ inputs.deprecate-range }}" == "true" ]]; then
                  echo "### About to deprecate all versions up to and including: ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
                else
                  echo "### About to deprecate version: ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
                fi
                echo "### Deprecation message: ${{ inputs.message }}" >> $GITHUB_STEP_SUMMARY

        - name: Get package names
          id: packages
          shell: bash
          run: |
              echo "PACKAGE_NAMES=$(npx lerna ls --json | jq -r '.[].name' | tr '\n' ' ')" >> $GITHUB_OUTPUT

        -   name: Authenticate with NPM registry
            shell: bash
            run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
            env:
                NPM_TOKEN: ${{ inputs.token }}

        - name: "Notify about wait time"
          shell: bash
          run: |
              if [[ "${{ inputs.deprecate-range }}" == "true" ]]; then
                echo "⚠️ Will deprecate all versions up to and including ${{ inputs.version }} in 10 seconds. Cancel now if this is a mistake..."
              else
                echo "⚠️ Will deprecate version ${{ inputs.version }} in 10 seconds. Cancel now if this is a mistake..."
              fi

        -   name: Wait before deprecation
            uses: actions/github-script@v7
            with:
                result-encoding: string
                script: |
                    const doWait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

                    (async () => {
                        for (let i = 10; i > 0; i--) {
                            console.log(`${i} seconds remaining...`);
                            await doWait(1000);
                        }

                        console.log("Proceeding with deprecation");
                     })();

        - name: Deprecate packages
          shell: bash
          env:
              NPM_TOKEN: ${{ inputs.token }}
          run: |
              PACKAGES="${{ steps.packages.outputs.PACKAGE_NAMES }}"
              VERSION="${{ inputs.version }}"
              MESSAGE="${{ inputs.message }}"
              DEPRECATE_RANGE="${{ inputs.deprecate-range }}"

              echo "### Deprecating the following packages:" >> $GITHUB_STEP_SUMMARY

              for pkg in $PACKAGES; do
                if [[ "$DEPRECATE_RANGE" == "true" ]]; then
                  VERSION_SPEC="<=$VERSION"
                  echo "- Deprecating $pkg@$VERSION_SPEC (all versions up to and including $VERSION)" >> $GITHUB_STEP_SUMMARY
                else
                  VERSION_SPEC="$VERSION"
                  echo "- Deprecating $pkg@$VERSION_SPEC" >> $GITHUB_STEP_SUMMARY
                fi
                npm deprecate "$pkg@$VERSION_SPEC" "$MESSAGE"
              done
