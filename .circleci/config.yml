version: 2.1

orbs:
    codecov: codecov/codecov@3.3.0

references:
    docker_image: &docker_image
        - image: cypress/base:16.17.1
          environment:
              TERM: xterm

commands:
    setup:
        description: "Setup command to install/bootstrap/build"
        steps:
            -   restore_cache:
                    name: Restore pnpm Package Cache
                    keys:
                        - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
            -   run:
                    name: Install pnpm package manager
                    command: |
                        corepack enable
                        corepack prepare pnpm@8.4.0 --activate
    bundle:
        description: "Create UMD bundles"
        steps:
            - run:
                name: Bundle for Production
                command: pnpm bundle:prod

    sb:
       description: Build Storybook
       steps:
           - run:
                name: Build Storybook
                command: pnpm sb:build:internal

    prepare-e2e:
        description: "Prepare for cypress e2e tests"
        steps:
            - run:
                  name: Install cypress
                  command: pnpm cypress install
            - run:
                  name: Verify cypress
                  command: npx cypress verify

    run-e2e-http:
        description: "Run http servers for e2e tests"
        steps:
          - run:
                name: Serve built Storybook
                command: pnpm sb:serve
                background: true
          - run:
                name: Serve bundled js files
                command: pnpm bundle:serve
                background: true

    run-e2e:
       description: "Run cypress e2e tests"
       steps:
           - run:
                 name: Run cypress e2e
                 command: |
                    echo RUNNING SPECS = $(tr [:blank:] ',' < /tmp/specs-to-run)
                    pnpm cy:run:ci --spec $(tr [:blank:] ',' < /tmp/specs-to-run)

jobs:
    setup:
        docker: *docker_image
        steps:
            - checkout
            - setup
            - run: pnpm install
            - run: pnpm build
            - save_cache:
                    name: Save pnpm Package Cache
                    key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
                    paths:
                        - node_modules
            -   persist_to_workspace:
                    root: .
                    paths:
                        - node_modules
                        - packages

    test:
        docker: *docker_image
        steps:
            - checkout
            - setup
            - attach_workspace:
                  at: .
            - run:
                  name: Test Code (lint, flow, types)
                  command: pnpm test:ci
            - run:
                  name: Vitest with coverage
                  command: pnpm vitest:ci
            - store_test_results:
                  path: reports/junit
            - store_artifacts:
                  path: reports/junit
            - store_artifacts:
                  path: coverage
            - persist_to_workspace:
                  root: .
                  paths:
                      - coverage

    coverage:
        docker: *docker_image
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - codecov/upload

    bundle:
        docker: *docker_image
        steps:
            - checkout
            - setup
            - attach_workspace:
                at: .
            - bundle
            - store_artifacts:
                path: bundle
            - persist_to_workspace:
                root: .
                paths:
                    - bundle

    build-sb:
        docker: *docker_image
        steps:
            - checkout
            - setup
            - attach_workspace:
                at: .
            - sb
            - persist_to_workspace:
                root: .
                paths:
                   - .sb-static

    cypress-prepare:
        docker: *docker_image
        steps:
            - checkout
            - setup
            - attach_workspace:
                  at: .
            - prepare-e2e
            - save_cache:
                    key: cy-install-{{ checksum "pnpm-lock.yaml" }}
                    paths:
                        - /root/.cache/Cypress

    cypress-run:
        docker: *docker_image
        parallelism: 5
        steps:
            - checkout
            - setup
            - attach_workspace:
                  at: .
            - run:
                name: Split tests by timing
                command: |
                    circleci tests glob "cypress/integration/**/*-spec.js" | circleci tests split --split-by=timings > /tmp/specs-to-run
            - run-e2e-http
            - restore_cache:
                keys:
                    - cy-install-{{ checksum "pnpm-lock.yaml" }}
            - run-e2e
            -  run:
                when: always
                name: Fix junit reporter XML files attributes
                command: |
                    node scripts/fix-junit-report.js
            - store_artifacts:
                  path: cypress/screenshots
            - store_artifacts:
                  path: cypress/videos
            - store_test_results:
                  path: cypress/results

workflows:
    create-rpldy:
        jobs:
            - setup
            - test:
                  requires:
                      - setup
            - coverage:
                  requires:
                      - test
                  filters:
                      branches:
                          only: master
            - bundle:
                  requires:
                      - setup
            - build-sb:
                  requires:
                      - setup
            - cypress-prepare:
                  requires:
                      - setup
            - cypress-run:
                  requires:
                      - cypress-prepare
                      - bundle
                      - build-sb

#      - cypress/install:
#          name: Prepare E2E (cypress)
#          executor: cypress-node-14
#          requires:
#            - setup
#          yarn: true
#          cache-key: v1-deps-{{ checksum "yarn.lock" }}
#          # no need to run `yarn install` again, since was done already and modules are cached
#          install-command: "pwd; yarn sb:build:prod"
#          post-install:
#            # this sucks! need to find way to use output from bundle job!!! doesnt seem possible because cypress orb hardcodes - attach_workspace: at: ~/
#            - bundle
#      - cypress/run:
#          name: E2E (cypress)
#          executor: cypress-node-14
#          requires:
#            - Prepare E2E (cypress)
#          attach-workspace: true
#          yarn: true
#          cache-key: v1-deps-{{ checksum "yarn.lock" }}
#          start: yarn deps:serve
#          wait-on: "http://localhost:8001"
#          #            record: true
#          #            parallel: true
#          #            parallelism: 2
#          #            group: rpldy-ci
#          store_artifacts: true
#          post-steps:
#            - store_test_results:
#                path: cypress/results

#requires paid plan:
#executors:
#  mac:
#    macos:
#      xcode: 10.1.0
#        - cypress/run:
#            name: Mac E2E (cypress)
#            executor: mac
#            yarn: true
#            start: yarn sb:serve
#            wait-on: "http://localhost:8001"


#    build-and-deploy:
#      jobs:
#        - build-and-deploy:
#          filters:
#              branches:
#                  only: master
